System Maintenance:
sudo apt update
sudo apt-get upgrade

Installing Nginx:
sudo apt install nginx -y

Install Ultimate Nginx Bad Bot Blocker:
sudo wget https://raw.githubusercontent.com/mitchellkrogza/nginx-ultimate-bad-bot-blocker/master/install-ngxblocker -O /usr/local/sbin/install-ngxblocker
sudo chmod +x /usr/local/sbin/install-ngxblocker
sudo install-ngxblocker -x
sudo chmod +x /usr/local/sbin/setup-ngxblocker
sudo chmod +x /usr/local/sbin/update-ngxblocker
sudo setup-ngxblocker -x -> Press Yes for the *default* file
sudo /usr/local/sbin/update-ngxblocker

Configuring Ultimate Nginx Bad Bot Blocker:
Enter into /etc/nginx/sites-available/default -> Move the 6 lines of: above the first location block in this configuration file
##
# Nginx Bad Bot Blocker Includes
# REPO: https://github.com/mitchellkrogza/nginx-ultimate-bad-bot-blocker
##
include /etc/nginx/bots.d/ddos.conf;
include /etc/nginx/bots.d/blockbots.conf;

Setting up the automatic updation of the Ultimate Nginx Bad Bot Blocker:
Set up cronjob to automatically update the list of malicious referrers:
sudo crontab -e -> 1 to use nano -> 00 22 * * * /usr/local/sbin/update-ngxblocker

Installing PHP:
sudo apt install php7.4-fpm php7.4-common php7.4-dom php7.4-intl php7.4-mysql php7.4-xml php7.4-xmlrpc php7.4-curl php7.4-gd php7.4-imagick php7.4-cli php7.4-dev php7.4-imap php7.4-mbstring php7.4-soap php7.4-zip php7.4-bcmath -y

Installing MariaDB:
sudo apt-get install software-properties-common dirmngr apt-transport-https -y

sudo apt-key adv --fetch-keys 'https://mariadb.org/mariadb_release_signing_key.asc'

sudo add-apt-repository 'deb [arch=amd64,i386,arm64,ppc64el] [https://mirrors.xtom.nl/mariadb/repo/10.7/debian](https://mirrors.xtom.nl/mariadb/repo/10.7/debian) bullseye main'

sudo apt-get install mariadb-server -y

mysql_secure_installation -> Yes for Switch to unix_socket authentication -> 
No for changing the root user password -> Yes for removing anonymous users -> 
Yes for disallowing root login remotely -> Yes for removing test database -> 
Yes for reloading privilege tables


Installing phpMyAdmin:
sudo apt-get install phpmyadmin -y -> Press OK bty tabbing through -> 
Press Yes to configure database for phpmyadmin with dbconfig-common-> 
Set up Password

Configuring phpMyAdmin:
sudo ln -s /usr/share/phpmyadmin /var/www/html/

Configuring PHP:
Edit /etc/nginx/sites-available/default file by adding *index.php* for the list of default files and adding the following block above the first *location* block:
location ~ \.php$ {
	try_files $fastcgi_script_name =404;
	include fastcgi_params;
	fastcgi_pass unix:/run/php/php7.4-fpm.sock;
	fastcgi_index index.php;
	fastcgi_param DOCUMENT_ROOT $realpath_root;
	fastcgi_param SCRIPT_FILENAME $realpath_root$fastcgi_script_name;
}

Applying changes by restarting Nginx:
systemctl restart nginx

Creating Database Users:
Enter mysql command line interface by typing mysql ->
CREATE USER 'balint'@'localhost' IDENTIFIED BY '3edc5rfv1'; -> 
GRANT CREATE, EVENT, DELETE, INSERT, UPDATE, SELECT ON storage.* TO 'balint'@'localhost';
FLUSH PRIVILEGES;

Creating and Populating Database:
Enter mysql commands in interface to create database with tables:
CREATE DATABASE storage;
CREATE  TABLE `storage`.`prices` (
  `identifier` INT  AUTO_INCREMENT ,
  `price` VARCHAR(4) NOT NULL ,
  PRIMARY KEY (`identifier`) )
ENGINE = InnoDB;

INSERT INTO `storage`.`prices` (`identifier`, `price`) VALUES (NULL, '1'), (NULL, '2'), (NULL, '3'), (NULL, '4'), (NULL, '5'), (NULL, '6');

CREATE  TABLE `storage`.`altered_prices` (
  `identifier` INT  AUTO_INCREMENT ,
  `price` VARCHAR(4) NOT NULL ,
  PRIMARY KEY (`identifier`) )
ENGINE = InnoDB;

INSERT INTO `storage`.`altered_prices` (`identifier`, `price`) VALUES (NULL, '1'), (NULL, '2'), (NULL, '3'), (NULL, '4'), (NULL, '5'), (NULL, '6');

SET GLOBAL event_scheduler = ON;

USE storage;


CREATE EVENT FlightPriceUpdater
ON SCHEDULE
EVERY 120 SECOND STARTS TIMESTAMP("2022-04-22")
DO
UPDATE storage.prices SET price=FLOOR(100+RAND()*(5000-100+1)) WHERE identifier in ('1','2','3','4','5','6');

CREATE EVENT DummyValueCopier
ON SCHEDULE
EVERY 120 SECOND STARTS TIMESTAMP("2022-04-22")
DO
UPDATE storage.altered_prices INNER JOIN storage.prices
    ON altered_prices.identifier = prices.identifier
SET altered_prices.price = prices.price;


CREATE EVENT DummyValueAlterer
ON SCHEDULE
EVERY 121 SECOND STARTS TIMESTAMP("2022-04-22") + INTERVAL 1 SECOND
DO
UPDATE altered_prices SET altered_prices.price = (altered_prices.price * 1.2) WHERE altered_prices.identifier in ('1','2','3','4','5','6');

Transferring files from Windows PC to Server:
scp index.php root@213.52.128.13:/var/www/html/
scp 404.php root@213.52.128.13:/var/www/html/

Editing the blockbots.conf file to allow system to function properly:
rewrite ^/ /404.php;